# sway config file
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# Sway config =============================================================={{{1

# Mod1: Alt key
# Mod4: Win key
set $alt Mod1
set $mod Mod4
set $win Mod4

# Reload the configuration file.
bindsym $mod+Shift+r reload

set $left  h
set $down  j
set $up    k
set $right l

# Commands ================================================================={{{1

# Start a terminal.
bindsym $mod+Return exec i3-sensible-terminal

# Start dmenu (a program launcher).
bindsym $mod+c exec dmenu_run

# Kill the focused window.
bindsym $mod+Shift+q kill

# OS style ================================================================={{{1

# Lock the screen.
bindsym $mod+Ctrl+q exec i3lock --color=000000

# Log out.
bindsym $mod+Ctrl+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# Presentation ============================================================={{{1

# Hide borders adjacent to the screen edges.
hide_edge_borders both

# Organisation ============================================================={{{1

default_orientation vertical

# split in horizontal orientation
bindsym $mod+bracketright split horizontal

# split in vertical orientation
bindsym $mod+bracketleft split vertical

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen
bindsym $mod+Shift+f fullscreen global

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Moving around =================================================={{{2

# Use the same shortcuts as vim to move around. Since I spend all my time in
# vim, it will be easier not to switch between different shortcuts.

# Change focus.
bindsym $mod+$left  focus left
bindsym $mod+$down  focus down
bindsym $mod+$up    focus up
bindsym $mod+$right focus right

# Move the focused window.
bindsym $mod+Shift+$left  move left
bindsym $mod+Shift+$down  move down
bindsym $mod+Shift+$up    move up
bindsym $mod+Shift+$right move right

# Switch to workspace.
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace.
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Move workspace to next output
bindsym $mod+m move workspace to output right

# Status bar ==============================================================={{{1

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	status_command i3status
	position bottom
	# Only show the status bar when the modifier key is pressed.
	# mode hide
}


# TODO: Everything below this needs to be cleaned =========================={{{1

# System keys =============================================================={{{1

# Sound control with amixer.
bindsym XF86AudioRaiseVolume exec amixer -q set Master 2dB+ unmute
bindsym XF86AudioLowerVolume exec amixer -q set Master 2dB- unmute
bindsym XF86AudioMute exec amixer -q set Master toggle


# Workspaces ==============================================================={{{1

# Workspace 9: communicationn
#assign [class="Skype"] 9: comm

# Startup =================================================================={{{1

#exec --no-startup-id skype
#exec --no-startup-id i3-msg 'workspace 8; exec chromium;'

# Misc ====================================================================={{{1

# Take a screenshot.
#bindsym --release Print exec --no-startup-id screenshot.py
#bindsym --release Print exec scrot -e 'mv $f /tmp/ && gimp /tmp/$f'

# Keyboard layouts
bindsym $mod+Shift+z exec setxkbmap fr
bindsym $mod+Shift+x exec setxkbmap us

# Auto-generated ==========================================================={{{1

# Everything below is auto-generated by the i3-config-wizard and has not been
# reorganized.

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
# font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left  resize shrink width 10 px or 10 ppt
        bindsym $down  resize grow height 10 px or 10 ppt
        bindsym $up    resize shrink height 10 px or 10 ppt
        bindsym $right resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"


# .vimrc specific options =================================================={{{1
# vim: set foldmethod=marker:
